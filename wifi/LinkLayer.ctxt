#BlueJ class context
comment0.target=LinkLayer
comment0.text=\r\n\ Use\ this\ layer\ as\ a\ starting\ point\ for\ your\ project\ code.\ \ See\ {@link\ Dot11Interface}\ for\ more\r\n\ details\ on\ these\ routines.\r\n\ @author\ richards\r\n
comment1.params=ourMAC\ output
comment1.target=LinkLayer(short,\ java.io.PrintWriter)
comment1.text=\r\n\ Constructor\ takes\ a\ MAC\ address\ and\ the\ PrintWriter\ to\ which\ our\ output\ will\r\n\ be\ written.\r\n\ @param\ ourMAC\ \ MAC\ address\r\n\ @param\ output\ \ Output\ stream\ associated\ with\ GUI\r\n
comment2.params=dest\ data\ len
comment2.target=int\ send(short,\ byte[],\ int)
comment2.text=\r\n\ Send\ method\ takes\ a\ destination,\ a\ buffer\ (array)\ of\ data,\ and\ the\ number\r\n\ of\ bytes\ to\ send.\ \ See\ docs\ for\ full\ description.\r\n
comment3.params=t
comment3.target=int\ recv(Transmission)
comment3.text=\r\n\ Recv\ method\ blocks\ until\ data\ arrives,\ then\ writes\ it\ an\ address\ info\ into\r\n\ the\ Transmission\ object.\ \ See\ docs\ for\ full\ description.\r\n
comment4.params=
comment4.target=int\ status()
comment4.text=\r\n\ Returns\ a\ current\ status\ code.\ \ See\ docs\ for\ full\ description.\r\n
comment5.params=cmd\ val
comment5.target=int\ command(int,\ int)
comment5.text=\r\n\ Passes\ command\ info\ to\ your\ link\ layer.\ \ See\ docs\ for\ full\ description.\r\n
comment6.params=newRF
comment6.target=void\ setRF(rf.RF)
comment7.params=
comment7.target=rf.RF\ getRF()
comment8.params=newQueue
comment8.target=void\ setPacketQueue(java.util.concurrent.BlockingQueue)
numComments=9
